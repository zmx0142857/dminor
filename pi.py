#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""pi to your desired digit

pi=3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632788659361533818279682303019520353018529689957736225994138912497217752834791315155748572424541506959508295331168617278558890750983817546374649393192550604009277016711390098488240128583616035637076601047101819429555961989467678374494482553797747268471040475346462080466842590694912933136770289891521047521620569660240580381501935112533824300355876402474964732639141992726042699227967823547816360093417216412199245863150302861829745557067498385054945885869269956909272107975093029553211653449872027559602364806654991198818347977535663698074265425278625518184175746728909777727938000...
"""

__author__ = 'Clarence Zhuo'

import time, functools
import math, rational

def timer(fn):
    @functools.wraps(fn)
    def wrapper(*args, **kw):
        start = time.time()
        ret = fn(*args, **kw)
        end = time.time()
        print(fn.__name__, '(', *args, *kw,\
                ') executed in ', end-start , ' s.', sep='')
        return ret
    return wrapper

@timer
def my_first_pi(n):
    """
    N = |~ n / log10(2.25) ~|
    return 3 * sum_(i=0)^N choose(2*i, i) / ((2*i+1) * 16^i)

    my_first_pi(100) executed in 0.09969758987426758 s.
    my_first_pi(200) executed in 0.5831267833709717 s.
    my_first_pi(400) executed in 3.7976109981536865 s.
    my_first_pi(800) executed in 27.237123250961304 s.
    my_first_pi(1600) executed in 201.6477334499359 s.
    """
    N = math.ceil(n / math.log10(2.25))
    return (3 * sum(rational.Rat(rational.choose(2*i, i),\
        (16**i * (2*i+1))) for i in range(N))).to_float(n)

@timer
def my_second_pi(n):
    """
    N = |~ n * log2(10) / 4 ~|
    return sum_(i=0)^N
    (960*i^2 + 1208*i + 376) / ((8*i+1)*(8*i+4)*(8*i+5)*(8*i+6)*16^i))

    my_second_pi(100) executed in 0.010533332824707031 s.
    my_second_pi(200) executed in 0.052387237548828125 s.
    my_second_pi(400) executed in 0.29587364196777344 s.
    my_second_pi(800) executed in 1.9349935054779053 s.
    my_second_pi(1600) executed in 13.91610312461853 s.
    """
    N = math.ceil(n * 0.25 * math.log2(10))
    num = 376
    den1 = 120
    den2 = 1
    ret = 0
    for i in range(N):
        ret += rational.Rat(num, den1 * den2)
        num += 1920*i + 2168
        den1 += ((16384*i + 49152)*i + 52352)*i + 19536
        den2 <<= 4
    return ret.to_float(n)

print(my_second_pi(1000))
